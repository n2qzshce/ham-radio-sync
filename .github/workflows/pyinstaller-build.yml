# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build executeable

env:
  semver: 1.3.0.${{ github.run_number }}
  python-version: 3.8

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019, macos-10.15]
        include:
          - os: windows-2019
            exe-extension: .exe
            short-name: win
            move-command: move
          - os: macos-10.15
            exe-extension:
            short-name: osx
            move-command: mv
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ env.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Build CLI executable
      run: |
        pyinstaller -F radio_sync.py -n radio_sync-${{ matrix.short-name }}-${{ env.semver }}${{ matrix.exe-extension }}
        ${{ matrix.move-command }} dist/radio_sync-${{ matrix.short-name }}-${{ env.semver }}${{ matrix.exe-extension }} ./
        7z a -tzip radio_sync-${{ matrix.short-name }}-${{ env.semver }}.zip radio_sync-${{ matrix.short-name }}-${{ env.semver }}${{ matrix.exe-extension }}
    - name: Build GUI executable
      run: |
        pyinstaller -w -F radio_sync_gui.py -n radio_sync-${{ matrix.short-name }}_gui-${{ env.semver }}${{ matrix.exe-extension }}
        ${{ matrix.move-command }} dist/radio_sync-${{ matrix.short-name }}_gui-${{ env.semver }}${{ matrix.exe-extension }} ./
        7z a -tzip radio_sync-${{ matrix.short-name }}-${{ env.semver }}.zip radio_sync-${{ matrix.short-name }}_gui-${{ env.semver }}${{ matrix.exe-extension }}
    - name: Upload executable
      id: upload_executable
      uses: actions/upload-artifact@v2
      if: $${{ github.ref == 'refs/heads/ftm400' }}
      with:
        name: radio_sync-${{ matrix.short-name }}-${{ env.semver }}
        path: radio_sync-${{ matrix.short-name }}-${{ env.semver }}.zip
  release:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-20.04
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.semver }}
          release_name: Release ${{ env.semver }}
          body: |
            release ${{ env.semver }} description

            # Changelog:
            *
          draft: true
          prerelease: false
  release-assets:
    runs-on: ubuntu-20.04
    needs: [build, release]
    strategy:
      matrix:
        short-name: [win, osx]
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: radio_sync-${{ matrix.short-name }}-${{ env.semver }}
    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./radio_sync-${{ matrix.short-name }}-${{ env.semver }}.zip
        asset_name: radio_sync-${{ matrix.short-name }}-${{ env.semver }}.zip
        asset_content_type: application/zip
